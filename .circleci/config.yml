version: 2.1
orbs:
  ruby: circleci/ruby@0.1.2

jobs:
  build:
    docker:
      - image: circleci/ruby:2.7.0-node
        environment: # environment variables for primary container
          BUNDLE_JOBS: 3
          BUNDLE_RETRY: 3
          BUNDLE_PATH: vendor/bundle
          PGHOST: 127.0.0.1
          RAILS_ENV: test
      - image: circleci/postgres:latest # database image
        environment: # environment variables for database
          POSTGRES_USER: postgres
          POSTGRES_DB: mammon
          POSTGRES_PASSWORD: "postgres"
    steps:
      # special step to check out source code to working directory
      - checkout

      # Verifies we have the correct version of bundler installed and installs it if we don't
      - run:
          name: Configure Bundler
          command: |
            echo 'export BUNDLER_VERSION=$(cat Gemfile.lock | tail -1 | tr -d " ")' >> $BASH_ENV
            source $BASH_ENV
            gem install bundler

      # Install Ruby dependencies
      - run:
          name: Bundle Install
          command: bundle check --path vendor/bundle || bundle install --deployment

      # Install Yarn dependencies
      - run:
          name: Yarn Install
          command: yarn install --cache-folder ~/.cache/yarn

      # Wait for the database to become available
      - run:
          name: Wait for DB
          command: dockerize -wait tcp://localhost:5432 -timeout 1m

      # Setup the database
      - run:
          name: Database setup
          command: bin/rails db:setup && bin/rails db:create && bin/rails db:migrate

      # Run tests
      - run:
          name: Run rspec
          command: |
            bundle exec rspec --profile 10 \
                       --format RspecJunitFormatter \
                       --out test_results/rspec.xml \
                       --format progress \
                       $(circleci tests glob "spec/**/*_spec.rb" | circleci tests split --split-by=timings)

      # Save test results for timing analysis
      - store_test_results: # Upload test results for display in Test Summary: https://circleci.com/docs/2.0/collect-test-data/
          path: test_results
      # See https://circleci.com/docs/2.0/deployment-integrations/ for example deploy configs
